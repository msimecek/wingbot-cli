{{#if isAzure}}
{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "appName": {
            "type": "string",
            "metadata": {
                "description": "The name of the App Service app that you wish to create.  Must be unique."
            }
        }{{#if botService}},
        "botSku": {
            "defaultValue": "F0",
            "type": "string",
            "metadata": {
                "description": "Choose F0 for development and testing. Can be scaled up later using the Azure portal."
            }
        },        
        "botName": {
            "type": "string"
        },
        "botDisplayName": {
            "type": "string"
        },
        "botAppId": {
            "defaultValue": "",
            "type": "string",
            "metadata": {
                "description": "Bot Application ID registered in Microsoft App Portal."
            }
        },
        "botAppPassword": {
            "defaultValue": "",
            "type": "securestring",
            "metadata": {
                "description": "Bot App Password generated by Microsoft App Portal."
            }
        },{{/if}}
        {{#if cosmosdbName}}"cosmosDbName": {
            "defaultValue": "",
            "type": "string",
            "metadata": {
                "description": "Name of the Cosmos DB database to be created."
            }
        },{{/if}}
        "cosmosDbConnectionString": {
            "defaultValue": "",
            "type": "string",
            "metadata": {
                "description": "Connection string for the Cosmos DB instance you will use in production."
            }
        }
    },
    "variables": {
        "appName": "[parameters('appName')]",
        "hostingPlanName": "[parameters('appName')]",
        "insightsName": "[concat(parameters('appName'), '-insights')]",
        "storageAccountName": "[concat(uniquestring(resourceGroup().id), 'azfunctions')]",
        "storageAccountid": "[concat(resourceGroup().id,'/providers/','Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "appServicePlanName": "[concat(parameters('appName'), '-plan')]"
    },
    "resources": [
        {{#if cosmosdbName}}{
            "type": "Microsoft.DocumentDB/databaseAccounts",
            "kind": "MongoDB",
            "name": "[parameters('cosmosDbName')]",
            "apiVersion": "2015-04-08",
            "location": "[resourceGroup().location]",
            "tags": {
                "defaultExperience": "MongoDB"
            },
            "scale": null,
            "properties": {
                "databaseAccountOfferType": "Standard",
                "name": "[parameters('cosmosDbName')]"
            },
            "dependsOn": []
        },{{/if}}
        {
            "type": "microsoft.insights/components",
            "kind": "Node.JS",
            "name": "[variables('insightsName')]",
            "apiVersion": "2014-04-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "ApplicationId": "[variables('insightsName')]"
            }
        },
        {{#if azureServerless}}{
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[variables('storageAccountName')]",
            "apiVersion": "2015-06-15",
            "location": "[resourceGroup().location]",
            "properties": {
                "accountType": "Standard_LRS"
            }
        },
        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2015-04-01",
            "name": "[variables('hostingPlanName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "name": "[variables('hostingPlanName')]",
                "computeMode": "Dynamic",
                "sku": "Dynamic"
            }
        },
        {
            "apiVersion": "2015-08-01",
            "type": "Microsoft.Web/sites",
            "name": "[variables('appName')]",
            "location": "[resourceGroup().location]",
            "kind": "functionapp",
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
                "[resourceId('Microsoft.insights/components', variables('insightsName'))]"{{#if cosmosdbName}},
                "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('cosmosDbName'))]"{{/if}}               
            ],
            "properties": {
                "clientAffinityEnabled": false,
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
                "siteConfig": {
                    "appSettings": [
                        {
                            "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                            "value": "[reference(variables('insightsName')).InstrumentationKey]"
                        },
                        {
                            "name": "AzureWebJobsDashboard",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
                        },
                        {
                            "name": "AzureWebJobsStorage",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
                        },
                        {
                            "name": "FUNCTIONS_EXTENSION_VERSION",
                            "value": "beta"
                        },
                        {
                            "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
                        },
                        {
                            "name": "WEBSITE_CONTENTSHARE",
                            "value": "[toLower(variables('appName'))]"
                        },
                        {
                            "name": "WEBSITE_NODE_DEFAULT_VERSION",
                            "value": "8.11.1"
                        },
                        {
                            "name": "BOT_APP_ID",
                            "value": "[parameters('botAppId')]"
                        },
                        {
                            "name": "BOT_APP_SECRET",
                            "value": "[parameters('botAppPassword')]"
                        },
                        {
                            "name": "COSMOSDB_CONNECTION_STRING",
                            {{#if cosmosdbName}}"value": "[concat('mongodb://', parameters('cosmosDbName'), ':', uriComponent(listKeys(resourceId('Microsoft.DocumentDb/databaseAccounts', parameters('cosmosDbName')), '2015-04-08').primaryMasterKey), '@', parameters('cosmosDbName'), '.documents.azure.com:10250/?ssl=true')]"
                            {{else}}"value": "[parameters('cosmosDbConnectionString')]"{{/if}}
                        },
                        {
                            "name": "SCM_DO_BUILD_DURING_DEPLOYMENT",
                            "value": "true"
                        }
                    ]
                }
            }
        }{{/if}}{{#if azureExpress}},
        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2015-08-01",
            "name": "[variables('appServicePlanName')]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "F1",
                "tier": "Free",
                "capacity": 1
            }
        },
        {
            "type": "Microsoft.Web/Sites",
            "apiVersion": "2015-08-01",
            "name": "[variables('appName')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Web/serverFarms/', variables('appServicePlanName'))]",
                "[resourceId('Microsoft.insights/components', variables('insightsName'))]"{{#if cosmosdbName}},
                "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('cosmosDbName'))]"{{/if}}     
            ],
            "properties": {
                "name": "[parameters('appName')]",
                "serverFarmId": "[variables('appServicePlanName')]",
                "siteConfig": {
                    "phpVersion": "off",
                    "appSettings": [
                        {
                            "name": "WEBSITE_NODE_DEFAULT_VERSION",
                            "value": "8.11.1"
                        },
                        {
                            "name": "BOT_APP_ID",
                            "value": "[parameters('botAppId')]"
                        },
                        {
                            "name": "BOT_APP_SECRET",
                            "value": "[parameters('botAppPassword')]"
                        },
                        {
                            "name": "COSMOSDB_CONNECTION_STRING",
                            {{#if cosmosdbName}}"value": "[concat('mongodb://', parameters('cosmosDbName'), ':', uriComponent(listKeys(resourceId('Microsoft.DocumentDb/databaseAccounts', parameters('cosmosDbName')), '2015-04-08').primaryMasterKey), '@', parameters('cosmosDbName'), '.documents.azure.com:10250/?ssl=true')]"
                            {{else}}"value": "[parameters('cosmosDbConnectionString')]"{{/if}}
                        },
                        {
                            "name": "SCM_DO_BUILD_DURING_DEPLOYMENT",
                            "value": "true"
                        }
                    ]
                }
            }
        }{{/if}}{{#if botService}},
        {
            "type": "Microsoft.BotService/botServices",
            "sku": {
                "name": "[parameters('botSku')]"
            },
            "kind": "bot",
            "name": "[parameters('botName')]",
            "apiVersion": "2017-12-01",
            "location": "global",
            "properties": {
                "name": "[parameters('botName')]",
                "displayName": "[parameters('botDisplayName')]",
                "endpoint": "[concat('https://', variables('appName'), '.azurewebsites.net/bot')]",
                "enabledChannels": [
                    "webchat",
                    "directline",
                    "facebook"
                ],
                "configuredChannels": [
                    "webchat",
                    "directline",
                    "facebook"
                ],
                "msaAppId": "[parameters('botAppId')]",
                "developerAppInsightKey": "[reference(resourceId('Microsoft.Insights/components', variables('insightsName')), '2014-04-01').InstrumentationKey]"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', variables('appName'))]"
            ]
        }{{/if}}
    ]
}
{{/if}}