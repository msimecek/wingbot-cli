/*
 * @author wingbot.ai
 */
'use strict';
{{#if jwtTokenStorage}}
const { BotTokenStorage } = require('wingbot-jwt');{{/if}}
const { Processor{{#if memoryStorage}}, MemoryStateStorage{{/if}} } = require('wingbot');{{#if dynamodbStorage}}
const { StateStorage{{#if dbTokenStorage}}, BotTokenStorage{{/if}} } = require('wingbot-dynamodb');{{/if}}{{#if mongodbStorage}}
const { StateStorage{{#if dbTokenStorage}}, BotTokenStorage{{/if}} } = require('wingbot-mongodb');{{/if}}
const config = require('../config');
const log = require('../lib/log');{{#if dynamodbStorage}}
const dynamodb = require('../lib/dynamodb');{{/if}}{{#if mongodbStorage}}
const mongodb = require('../lib/mongodb');{{/if}}
const onAction = require('./onAction');
const botFactory = require('./botFactory');
const botSettings = require('./botSettings');

function createProcessor () {
    const bot = botFactory();

    bot.on('action', onAction);

{{#if memoryStorage}}
    const stateStorage = new MemoryStateStorage();
    const tokenStorage = null;
{{/if}}{{#if dynamodbStorage}}
    const stateStorage = new StateStorage(`${config.prefix}-states`, dynamodb);{{#if dbTokenStorage}}
    const tokenStorage = new BotTokenStorage(`${config.prefix}-tokens`, 'token', dynamodb);{{/if}}
{{/if}}{{#if mongodbStorage}}
    const stateStorage = new StateStorage(mongodb, 'states');{{#if dbTokenStorage}}
    const tokenStorage = new BotTokenStorage(mongodb, 'tokens');{{/if}}
{{/if}}{{#if jwtTokenStorage}}
    const tokenStorage = new BotTokenStorage(config.jwt.secret, config.jwt.options);
{{/if}}
    return new Processor(bot, {
        appUrl: config.appUrl,
        stateStorage,{{#if frontendTokenStorage}}
        tokenStorage,{{/if}}
        log
    });
}

module.exports = {
    botSettings,
    createProcessor,
    botFactory
};
